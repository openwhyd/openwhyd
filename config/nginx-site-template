# Generated by restart.sh, from nginx-site-template

# Map IP address to $limit variable if request is of type POST
# cf https://product.reverb.com/first-line-of-defense-blocking-bad-post-requests-using-nginx-rate-limiting-507f4c6eed7b
map $request_method $limit {
  default         "";
  POST            $binary_remote_addr;
}

# Allocate memory for our IP-based rate limiter
# cf https://www.nginx.com/blog/rate-limiting-nginx/
limit_req_zone $limit zone=ratelimited:10m rate=1r/s;

server {
  server_name www.openwhyd.org;
  return 301 https://openwhyd.org$request_uri;
}

server {
  server_name openwhyd.org;
  location / {
    proxy_pass http://localhost:{{PORT}};
  }
}

server {
  listen 443 ssl;
  server_name openwhyd.org;
  ssl on;
  ssl_certificate /etc/letsencrypt/live/openwhyd.org/fullchain.pem;
  ssl_certificate_key /etc/letsencrypt/live/openwhyd.org/privkey.pem;
  ssl_trusted_certificate /etc/letsencrypt/live/openwhyd.org/chain.pem;
  ssl_protocols TLSv1 TLSv1.1 TLSv1.2;
  ssl_prefer_server_ciphers on;
  ssl_dhparam /etc/ssl/certs/dhparam.pem;
  ssl_ciphers 'ECDHE-RSA-AES128-GCM-SHA256:ECDHE-ECDSA-AES128-GCM-SHA256:ECDHE-RSA-AES256-GCM-SHA384:ECDHE-ECDSA-AES256-GCM-SHA384:DHE-RSA-AES128-GCM-SHA256:DHE-DSS-AES128-GCM-SHA256:kEDH+AESGCM:ECDHE-RSA-AES128-SHA256:ECDHE-ECDSA-AES128-SHA256:ECDHE-RSA-AES128-SHA:ECDHE-ECDSA-AES128-SHA:ECDHE-RSA-AES256-SHA384:ECDHE-ECDSA-AES256-SHA384:ECDHE-RSA-AES256-SHA:ECDHE-ECDSA-AES256-SHA:DHE-RSA-AES128-SHA256:DHE-RSA-AES128-SHA:DHE-DSS-AES128-SHA256:DHE-RSA-AES256-SHA256:DHE-DSS-AES256-SHA:DHE-RSA-AES256-SHA:AES128-GCM-SHA256:AES256-GCM-SHA384:AES128-SHA256:AES256-SHA256:AES128-SHA:AES256-SHA:AES:CAMELLIA:DES-CBC3-SHA:!aNULL:!eNULL:!EXPORT:!DES:!RC4:!MD5:!PSK:!aECDH:!EDH-DSS-DES-CBC3-SHA:!EDH-RSA-DES-CBC3-SHA:!KRB5-DES-CBC3-SHA';
  ssl_session_timeout 1d;
  ssl_session_cache shared:SSL:50m;
  ssl_stapling on;
  ssl_stapling_verify on;
  add_header Strict-Transport-Security max-age=15768000;

  location / {
    # We apply the rate limit and allow one extra request (with delay)
    # cf https://www.nginx.com/blog/rate-limiting-nginx/#bursts
    limit_req zone=ratelimited burst=1;
    proxy_pass http://localhost:{{PORT}};
  }
}
