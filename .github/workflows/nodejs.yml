name: GitHub Actions Workflow

on:
  push:
    branches:
      - master
  pull_request:
    branches:
      - master

jobs:
  tests:
    name: CI Test Suite
    if: "!contains(github.event.head_commit.message, '[skip ci]')"
    runs-on: ubuntu-latest
    services:
      mongodb:
        image: docker://mongo:3.4
        ports:
          - 27017:27017
    steps:
      - uses: actions/checkout@v1
      - name: Setup Node.js
        uses: actions/setup-node@v1
        with:
          node-version: 10
      - name: check npm cache
        uses: actions/cache@v1
        with:
          path: node_modules
          key: ${{ runner.OS }}-build-${{ hashFiles('**/package-lock.json') }}
          restore-keys: |
            ${{ runner.OS }}-build-${{ env.cache-name }}-
            ${{ runner.OS }}-build-
      - name: npm install
        env:
          CI: true
        run: npm install --prefer-offline --no-audit
      - name: Initialize database
        env:
          CI: true
        run: |
          source env-vars-testing.sh
          npm run test-reset
      - name: Start Openwhyd server
        run: |
          source env-vars-testing.sh
          npm start --mongoDbDatabase openwhyd_test &
          ./scripts/wait-for-http-server.sh 8080 # give openwhyd's server some time to start
      - name: npm test
        env:
          CI: true
        run: |
          source env-vars-testing.sh
          npm test
      - name: Semantic Release
        env:
          CI: true
          GH_TOKEN: ${{ secrets.GH_TOKEN }}
        run: |
          npm run semantic-release
      - name: Publish to Docker Hub registry
        if: github.event_name == 'push'
        uses: jerray/publish-docker-action@v1.0.3
        with:
          username: ${{ secrets.DOCKER_HUB_USERNAME }}
          password: ${{ secrets.DOCKER_HUB_ACCESS_TOKEN }}

  cypress:
    name: Cypress E2E (experimental)
    if: "!contains(github.event.head_commit.message, '[skip ci]')"
    runs-on: ubuntu-16.04
    services:
      mongodb:
        image: docker://mongo:3.4
        ports:
          - 27017:27017
    steps:
      - uses: docker://cypress/base:10
      - uses: actions/checkout@v1
      - name: check npm cache
        uses: actions/cache@v1
        with:
          path: node_modules
          key: ${{ runner.OS }}-cypress-build-${{ hashFiles('**/package-lock.json') }}
          restore-keys: |
            ${{ runner.OS }}-cypress-build-${{ env.cache-name }}-
            ${{ runner.OS }}-cypress-build-
      - name: npm install
        env:
          CI: true
        run: npm install --prefer-offline --no-audit
      - name: check cypress cache
        uses: actions/cache@v1
        with:
          path: /home/runner/.cache/Cypress
          key: ${{ runner.OS }}-cypress-cache-${{ hashFiles('**/package-lock.json') }}
          restore-keys: |
            ${{ runner.OS }}-cypress-cache-${{ env.cache-name }}-
            ${{ runner.OS }}-cypress-cache-
      - name: install cypress
        run: node_modules/.bin/cypress install
      - name: Initialize database
        env:
          CI: true
        run: |
          source env-vars-testing.sh
          npm run test-reset
      - name: Start Openwhyd server
        run: |
          source env-vars-testing.sh
          npm start --mongoDbDatabase openwhyd_test &
          ./scripts/wait-for-http-server.sh 8080 # give openwhyd's server some time to start
      - name: Run Cypress tests
        env:
          CI: true
        run: |
          source env-vars-testing.sh
          node_modules/.bin/cypress run
